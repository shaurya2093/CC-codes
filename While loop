While Loop 

lex while.l
yacc -d while.y
gcc lex.yy.c y.tab.c 
./a.out
while (x < 10){


while.l
%{
#include<stdio.h>
#include "y.tab.h"
%}
%%
"while" { return WHILE; }
"(" { return LP; }
")" { return RP; }
";" { return SC; }
[a-zA-Z_][a-zA-Z0-9_]* { return ID; }
"+"|"-"|"*"|"/"|"="|"=="|"<"|"<="|">"|">="|"&&"|"||" { return BOP; }
"++"|"--" { return UOP; }
[0-9]+ { return NUM; }
. {}
%%
int yywrap() {
    return 1;
}

while.y
%{
#include<stdio.h>
extern int yylex();
int yyerror(const char *);
%}
%token WHILE LP RP SC ID NUM UOP BOP
%%
P: S
;
S: WHILE LP E RP { 
    printf("Valid while loop detected\n"); 
}
;
E: ID 
  | NUM 
  | ID BOP ID 
  | ID BOP NUM 
  | ID UOP 
  | UOP ID
;
%%
int main() {
    yyparse();
    return 0;
}

int yyerror(const char *s) {
    fprintf(stderr, "Error: %s\n", s);
    return 0;
}
